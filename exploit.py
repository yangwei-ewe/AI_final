from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
import os
import base64
from PIL import Image
from io import BytesIO
import numpy as np
from ultralytics import YOLO
import cv2
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
chrome_options = Options()
chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9222")
chrome_driver = r"C:\Users\yyany\OneDrive桌面\chromedriver.exe"
driver = webdriver.Chrome(service = Service(chrome_driver), options=chrome_options)

def click():
    driver.refresh()
    try:
        driver.find_element(By.XPATH,'//*[@id="start"]').click()
    except:pass
    try:
        element = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.ID, 'code')))
        element.click()
    except:pass
def cpimg():
    img = driver.find_element(By.XPATH,'//*[@id="yw0"]')
    img_url = img.get_attribute('src')
    image_data = base64.b64decode(img_url.split(',')[1])
    image = Image.open(BytesIO(image_data))
    image_path = os.path.join('imgs', 'image.png')
    image.save(image_path)
def getAnswer(resault:list)->list[str]:
    rtn=[]
    for it in resault:
        rtn.append("".join([chr(ord("A")+int(it[-1])) for it in sorted(it.boxes.data,key=lambda box: box[0])]))
    return rtn

click()
cpimg()
image_path = cv2.imdecode(np.fromfile(r"C:\Users\yyany\OneDrive\文件\python\AI\imgs\image.png",dtype=np.uint8),-1)
modelResault=YOLO("C:\\Users\\yyany\\OneDrive\\文件\\python\\AI\\reCaptcha\\best.pt")
for i in range(40):
    cpimg()
    image_path = cv2.imdecode(np.fromfile(r"C:\Users\yyany\OneDrive\文件\python\AI\imgs\image.png",dtype=np.uint8),-1)
    ans = getAnswer(modelResault(image_path))[0]
    print(ans)
    input_element = driver.find_element(By.ID,'code')
    input_element.send_keys(ans)
    input_element.send_keys(Keys.ENTER)







